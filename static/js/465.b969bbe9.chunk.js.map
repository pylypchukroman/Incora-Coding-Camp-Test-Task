{"version":3,"file":"static/js/465.b969bbe9.chunk.js","mappings":"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","sources":["Utils/MovieAPI.jsx","webpack://react-homework-template/./src/components/Navigation/Navigation.module.scss?a7be","components/Navigation/Navigation.jsx","webpack://react-homework-template/./src/components/ComedyTop/ComedyTop.module.scss?30ae","components/ComedyTop/ComedyTop.jsx","webpack://react-homework-template/./src/components/PopularList/PopularList.module.scss?3eeb","components/PopularList/PopularList.jsx","webpack://react-homework-template/./src/components/SubscribList/SubscribList.module.scss?89c4","components/SubscribList/SubscribList.jsx","webpack://react-homework-template/./src/components/TopRatedList/TopRatedList.module.scss?dc32","components/TopRatedList/TopRatedList.jsx","webpack://react-homework-template/./src/pages/SubscriptionPage/SubscriptionPage.module.scss?316d","pages/SubscriptionPage/SubscriptionPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\naxios.defaults.params = {\n  api_key: 'b30723d90054545e6fdab6d6887d20fb',\n  language: 'en-US',\n};\n\nexport const getServiceInfo = id => {\n  return axios\n    .get(`/3/network/${id}`)\n    .then(res => res.data)\n    .catch(error => {\n      throw error;\n    });\n};\n\nexport const getSeriesList = (id, page) => {\n  return axios\n    .get(`/3/discover/tv?&with_networks=${id}&page=${page}`)\n    .then(res => res.data.results)\n    .catch(error => {\n      throw error;\n    });\n};\n\nexport const getSerial = id => {\n  return axios\n    .get(`/3/tv/${id}`)\n    .then(res => res.data)\n    .catch(error => {\n      throw error;\n    });\n};\n\nexport const getSeasonInfo = (serialId, seasonNumber) => {\n  return axios\n    .get(`/3/tv/${serialId}/season/${seasonNumber}`)\n    .then(res => res.data)\n    .catch(error => {\n      throw error;\n    });\n};\n\nexport const getTopRated = () => {\n  return axios\n    .get(`/3/tv/top_rated`)\n    .then(res => res.data.results)\n    .catch(error => {\n      throw error;\n    });\n};\n\nexport const getPopularToday = () => {\n  return axios\n    .get(`/3/tv/popular`)\n    .then(res => res.data.results)\n    .catch(error => {\n      throw error;\n    });\n};\n\nexport const getComedyTop = () => {\n  return axios\n    .get(`/3/discover/movie?&sort_by=popularity.desc&with_genres=35`)\n    .then(res => res.data.results)\n    .catch(error => {\n      throw error;\n    });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"nav\":\"Navigation_nav__MsE7Z\",\"link\":\"Navigation_link__Jlf0e\",\"activeClass\":\"Navigation_activeClass__Huhkg\",\"user\":\"Navigation_user__HhVvo\"};","import { NavLink } from 'react-router-dom';\nimport styles from './Navigation.module.scss';\nimport Logo from '../../images/logo-min.png';\n\nconst Navigation = () => {\n  return (\n    <nav className={styles.nav}>\n      <NavLink exact to=\"/\">\n        <img src={Logo} alt=\"logo\" width=\"80\" height=\"20\" />\n      </NavLink>\n      <NavLink\n        className={styles.link}\n        activeClassName={styles.activeClass}\n        to=\"/streamingService\"\n      >\n        Streaming Service\n      </NavLink>\n      <NavLink\n        className={styles.link}\n        activeClassName={styles.activeClass}\n        to=\"/subscription\"\n      >\n        Subscription\n      </NavLink>\n      <div className={styles.user}>\n        <p>U</p>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ComedyTop_list__DFDXt\",\"item\":\"ComedyTop_item__LI+ym\",\"imageWrapper\":\"ComedyTop_imageWrapper__yiWXm\",\"info\":\"ComedyTop_info__ijMWw\",\"title\":\"ComedyTop_title__oh6pX\"};","import styles from './ComedyTop.module.scss';\nimport noImageLoad from '../../images/no-image-min.png';\nimport { useEffect, useState } from 'react';\nimport { getComedyTop } from 'Utils/MovieAPI';\n\nconst ComedyTop = () => {\n  const imageOnErrorHandler = event => {\n    event.currentTarget.src = noImageLoad;\n  };\n  const [shows, setShows] = useState([]);\n  useEffect(() => {\n    getComedyTop().then(data => setShows(data));\n  }, []);\n  return (\n    <ul className={styles.list}>\n      {shows &&\n        shows.slice(0, 8).map(show => (\n          <li key={show.id} className={styles.item}>\n            <div className={styles.imageWrapper}>\n              <img\n                src={`https://image.tmdb.org/t/p/original/${show.poster_path}`}\n                alt={show.name}\n                onError={imageOnErrorHandler}\n                loading=\"lazy\"\n              />\n            </div>\n            <div className={styles.info}>\n              <p className={styles.title}>{show.title}</p>\n              <p>Rate: {show.vote_average}</p>\n            </div>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default ComedyTop;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"PopularList_list__zblbp\",\"item\":\"PopularList_item__jeL3h\",\"imageWrapper\":\"PopularList_imageWrapper__ozIxh\",\"info\":\"PopularList_info__wGXHu\",\"title\":\"PopularList_title__D6NCI\"};","import styles from './PopularList.module.scss';\nimport noImageLoad from '../../images/no-image-min.png';\nimport { useEffect, useState } from 'react';\nimport { getPopularToday } from 'Utils/MovieAPI';\n\nconst PopularList = () => {\n  const imageOnErrorHandler = event => {\n    event.currentTarget.src = noImageLoad;\n  };\n  const [shows, setShows] = useState([]);\n  useEffect(() => {\n    getPopularToday().then(data => setShows(data));\n  });\n\n  return (\n    <ul className={styles.list}>\n      {shows &&\n        shows.slice(0, 8).map(show => (\n          <li key={show.id} className={styles.item}>\n            <div className={styles.imageWrapper}>\n              <img\n                src={`https://image.tmdb.org/t/p/original/${show.poster_path}`}\n                alt={show.name}\n                onError={imageOnErrorHandler}\n                loading=\"lazy\"\n              />\n            </div>\n            <div className={styles.info}>\n              <p className={styles.title}>{show.name}</p>\n              <p>Rate: {show.vote_average}</p>\n            </div>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default PopularList;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"SubscribList_list__CVlQy\",\"item\":\"SubscribList_item__0sKIj\",\"link\":\"SubscribList_link__LRrqh\",\"linkText\":\"SubscribList_linkText__2Xdli\"};","import { Link } from 'react-router-dom';\nimport styles from './SubscribList.module.scss';\nimport noImageLoad from '../../images/no-image-min.png';\n\nconst SubscribList = ({ subscribList }) => {\n  const imageOnErrorHandler = event => {\n    event.currentTarget.src = noImageLoad;\n  };\n  return (\n    <ul className={styles.list}>\n      {subscribList &&\n        subscribList.map(network => (\n          <li key={network.id} className={styles.item}>\n            <Link\n              to={{\n                pathname: `/subscription/${network.id}`,\n              }}\n              className={styles.link}\n            >\n              <p className={styles.linkText}>{network.name}</p>\n              <img\n                src={`https://image.tmdb.org/t/p/original/${network.logo_path}`}\n                alt={network.name}\n                width=\"120\"\n                height=\"60\"\n                onError={imageOnErrorHandler}\n                loading=\"lazy\"\n              />\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default SubscribList;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TopRatedList_list__POsxu\",\"item\":\"TopRatedList_item__22nNg\",\"imageWrapper\":\"TopRatedList_imageWrapper__2Cebq\",\"info\":\"TopRatedList_info__BqsOQ\",\"title\":\"TopRatedList_title__qF1PL\"};","import { useEffect, useState } from 'react';\nimport styles from './TopRatedList.module.scss';\nimport noImageLoad from '../../images/no-image-min.png';\nimport { getTopRated } from 'Utils/MovieAPI';\n\nconst TopRatedList = () => {\n  const imageOnErrorHandler = event => {\n    event.currentTarget.src = noImageLoad;\n  };\n  const [shows, setShows] = useState([]);\n  useEffect(() => {\n    getTopRated().then(data => setShows(data));\n  }, []);\n\n  return (\n    <ul className={styles.list}>\n      {shows &&\n        shows.slice(0, 8).map(show => (\n          <li key={show.id} className={styles.item}>\n            <div className={styles.imageWrapper}>\n              <img\n                src={`https://image.tmdb.org/t/p/original/${show.poster_path}`}\n                alt={show.name}\n                onError={imageOnErrorHandler}\n                loading=\"lazy\"\n              />\n            </div>\n            <div className={styles.info}>\n              <p className={styles.title}>{show.name}</p>\n              <p>Rate: {show.vote_average}</p>\n            </div>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default TopRatedList;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SubscriptionPage_wrapper__MiAd-\"};","import ComedyTop from 'components/ComedyTop/ComedyTop';\nimport Navigation from 'components/Navigation/Navigation';\nimport PopularList from 'components/PopularList/PopularList';\nimport SubscribList from 'components/SubscribList/SubscribList';\nimport TopRatedList from 'components/TopRatedList/TopRatedList';\nimport { NetworkContext } from 'Context/NetworkContext';\nimport { useContext } from 'react';\nimport styles from './SubscriptionPage.module.scss';\n\nconst SubscriptionPage = () => {\n  const { networks } = useContext(NetworkContext);\n  const subscribList = networks.filter(network => network.sub === true);\n\n  return (\n    <>\n      <Navigation />\n      <div className={styles.wrapper}>\n        <h2>Popular striming servises</h2>\n        <SubscribList subscribList={subscribList} />\n        <h2>Top rated shows</h2>\n        <TopRatedList />\n        <h2>Popular today</h2>\n        <PopularList />\n        <h2>Recomend in Comedy</h2>\n        <ComedyTop />\n      </div>\n    </>\n  );\n};\n\nexport default SubscriptionPage;\n"],"names":["axios","api_key","language","getServiceInfo","id","then","res","data","catch","error","getSeriesList","page","results","getSerial","getSeasonInfo","serialId","seasonNumber","getTopRated","getPopularToday","getComedyTop","className","styles","exact","to","src","Logo","alt","width","height","activeClassName","imageOnErrorHandler","event","currentTarget","noImageLoad","useState","shows","setShows","useEffect","slice","map","show","poster_path","name","onError","loading","title","vote_average","subscribList","network","pathname","logo_path","useContext","NetworkContext","networks","filter","sub","Navigation"],"sourceRoot":""}