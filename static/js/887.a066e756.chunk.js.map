{"version":3,"file":"static/js/887.a066e756.chunk.js","mappings":"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","sources":["Utils/MovieAPI.jsx","webpack://react-homework-template/./src/components/Navigation/Navigation.module.scss?a7be","components/Navigation/Navigation.jsx","webpack://react-homework-template/./src/components/ComedyTop/ComedyTop.module.scss?30ae","components/ComedyTop/ComedyTop.jsx","webpack://react-homework-template/./src/components/PopularList/PopularList.module.scss?3eeb","components/PopularList/PopularList.jsx","webpack://react-homework-template/./src/components/SubscribList/SubscribList.module.scss?89c4","components/SubscribList/SubscribList.jsx","webpack://react-homework-template/./src/components/TopRatedList/TopRatedList.module.scss?dc32","components/TopRatedList/TopRatedList.jsx","webpack://react-homework-template/./src/pages/SubscriptionPage/SubscriptionPage.module.scss?316d","pages/SubscriptionPage/SubscriptionPage.jsx"],"sourcesContent":["import axios from 'axios';\nexport { getServiceInfo };\nexport { getSeriesList };\nexport { getSerial };\nexport { getSeasonInfo };\nexport { getMostViewedShowsOfYear };\nexport { getPopularToday };\nexport { getMostViewedShowsOfGenre };\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\naxios.defaults.params = {\n  api_key: 'b30723d90054545e6fdab6d6887d20fb',\n  language: 'en-US',\n};\n\nasync function getServiceInfo(id) {\n  const response = await axios\n    .get(`/3/network/${id}`)\n    .then(res => res.data)\n    .catch(error => {\n      throw error;\n    });\n  return response;\n}\n\nasync function getSeriesList(id, page) {\n  const response = axios\n    .get(`/3/discover/tv?&with_networks=${id}&page=${page}`)\n    .then(res => res.data.results)\n    .catch(error => {\n      throw error;\n    });\n  return response;\n}\n\nasync function getSerial(id) {\n  const response = axios\n    .get(`/3/tv/${id}`)\n    .then(res => res.data)\n    .catch(error => {\n      throw error;\n    });\n  return response;\n}\n\nasync function getSeasonInfo(serialId, seasonNumber) {\n  const response = axios\n    .get(`/3/tv/${serialId}/season/${seasonNumber}`)\n    .then(res => res.data)\n    .catch(error => {\n      throw error;\n    });\n  return response;\n}\n\nasync function getMostViewedShowsOfYear() {\n  const response = axios\n    .get(`/3/discover/tv?&sort_by=popularity.desc&with_networks=213`)\n    .then(res => res.data.results)\n    .catch(error => {\n      throw error;\n    });\n  return response;\n}\n\nasync function getPopularToday() {\n  const response = axios\n    .get(`/3/tv/popular`)\n    .then(res => res.data.results)\n    .catch(error => {\n      throw error;\n    });\n  return response;\n}\n\nasync function getMostViewedShowsOfGenre() {\n  const response = axios\n    .get(`/3/discover/movie?&sort_by=popularity.desc&with_genres=35`)\n    .then(res => res.data.results)\n    .catch(error => {\n      throw error;\n    });\n  return response;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"nav\":\"Navigation_nav__MsE7Z\",\"link\":\"Navigation_link__Jlf0e\",\"activeClass\":\"Navigation_activeClass__Huhkg\",\"user\":\"Navigation_user__HhVvo\",\"logo\":\"Navigation_logo__jusle\"};","import { NavLink } from 'react-router-dom';\nimport styles from './Navigation.module.scss';\nimport Logo from '../../images/logo-min.png';\n\nconst Navigation = () => {\n  return (\n    <nav className={styles.nav}>\n      <NavLink className={styles.logo} exact to=\"/\">\n        <img src={Logo} alt=\"logo\" width=\"80\" height=\"20\" />\n      </NavLink>\n      <NavLink\n        className={styles.link}\n        activeClassName={styles.activeClass}\n        to=\"/streamingService\"\n      >\n        Streaming Service\n      </NavLink>\n      <NavLink\n        className={styles.link}\n        activeClassName={styles.activeClass}\n        to=\"/subscription\"\n      >\n        Subscription\n      </NavLink>\n      <div className={styles.user}>\n        <p>U</p>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ComedyTop_list__DFDXt\",\"item\":\"ComedyTop_item__LI+ym\",\"imageWrapper\":\"ComedyTop_imageWrapper__yiWXm\",\"info\":\"ComedyTop_info__ijMWw\",\"title\":\"ComedyTop_title__oh6pX\"};","import styles from './ComedyTop.module.scss';\nimport noImageLoad from '../../images/no-image-min.png';\nimport { useEffect, useState } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport { getMostViewedShowsOfGenre } from 'Utils/MovieAPI';\n\nconst ComedyTop = () => {\n  const imageOnErrorHandler = event => {\n    event.currentTarget.src = noImageLoad;\n  };\n  const [shows, setShows] = useState([]);\n  useEffect(() => {\n    getMostViewedShowsOfGenre().then(data => setShows(data));\n  }, []);\n  return (\n    <ul className={styles.list}>\n      {shows &&\n        shows.slice(0, 7).map(show => (\n          <li key={show.id} className={styles.item}>\n            <div className={styles.imageWrapper}>\n              <LazyLoadImage\n                alt={show.name}\n                effect=\"blur\"\n                src={`https://image.tmdb.org/t/p/original/${show.poster_path}`}\n                onError={imageOnErrorHandler}\n                className={styles.img}\n              />\n            </div>\n            <div className={styles.info}>\n              <p className={styles.title}>{show.title}</p>\n              <p>Rate: {show.vote_average}</p>\n            </div>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default ComedyTop;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"PopularList_list__zblbp\",\"item\":\"PopularList_item__jeL3h\",\"imageWrapper\":\"PopularList_imageWrapper__ozIxh\",\"info\":\"PopularList_info__wGXHu\",\"title\":\"PopularList_title__D6NCI\"};","import styles from './PopularList.module.scss';\nimport noImageLoad from '../../images/no-image-min.png';\nimport { useEffect, useState } from 'react';\nimport { getPopularToday } from 'Utils/MovieAPI';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\nconst PopularList = () => {\n  const imageOnErrorHandler = event => {\n    event.currentTarget.src = noImageLoad;\n  };\n\n  const [shows, setShows] = useState([]);\n  useEffect(() => {\n    getPopularToday().then(data => setShows(data));\n  }, []);\n\n  return (\n    <ul className={styles.list}>\n      {shows &&\n        shows.slice(0, 7).map(show => (\n          <li key={show.id} className={styles.item}>\n            <div className={styles.imageWrapper}>\n              <LazyLoadImage\n                alt={show.name}\n                effect=\"blur\"\n                src={`https://image.tmdb.org/t/p/original/${show.poster_path}`}\n                onError={imageOnErrorHandler}\n                className={styles.img}\n              />\n            </div>\n            <div className={styles.info}>\n              <p className={styles.title}>{show.name}</p>\n              <p>Rate: {show.vote_average}</p>\n            </div>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default PopularList;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"SubscribList_list__CVlQy\",\"item\":\"SubscribList_item__0sKIj\",\"link\":\"SubscribList_link__LRrqh\",\"linkText\":\"SubscribList_linkText__2Xdli\",\"imgWrapper\":\"SubscribList_imgWrapper__S+3Mk\",\"img\":\"SubscribList_img__NEy-x\"};","import { Link } from 'react-router-dom';\nimport styles from './SubscribList.module.scss';\nimport noImageLoad from '../../images/no-image-min.png';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport PropTypes from 'prop-types';\n\nconst SubscribList = ({ subscribList }) => {\n  const imageOnErrorHandler = event => {\n    event.currentTarget.src = noImageLoad;\n  };\n  return (\n    <ul className={styles.list}>\n      {subscribList &&\n        subscribList.map(network => (\n          <li key={network.id} className={styles.item}>\n            <Link\n              to={{\n                pathname: `/subscription/${network.id}`,\n              }}\n              className={styles.link}\n            >\n              <p className={styles.linkText}>{network.name}</p>\n              <div className={styles.imgWrapper}>\n                <LazyLoadImage\n                  alt={network.name}\n                  effect=\"blur\"\n                  src={`https://image.tmdb.org/t/p/original/${network.logo_path}`}\n                  onError={imageOnErrorHandler}\n                  className={styles.img}\n                />\n              </div>\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nSubscribList.propTypes = {\n  subscribList: PropTypes.array.isRequired,\n};\n\nexport default SubscribList;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TopRatedList_list__POsxu\",\"item\":\"TopRatedList_item__22nNg\",\"imageWrapper\":\"TopRatedList_imageWrapper__2Cebq\",\"img\":\"TopRatedList_img__q0rHH\",\"info\":\"TopRatedList_info__BqsOQ\",\"title\":\"TopRatedList_title__qF1PL\"};","import { useEffect, useState } from 'react';\nimport styles from './TopRatedList.module.scss';\nimport noImageLoad from '../../images/no-image-min.png';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport { Link } from 'react-router-dom';\nimport { getMostViewedShowsOfYear } from 'Utils/MovieAPI';\n\nconst TopRatedList = () => {\n  const imageOnErrorHandler = event => {\n    event.currentTarget.src = noImageLoad;\n  };\n  const [shows, setShows] = useState([]);\n\n  useEffect(() => {\n    getMostViewedShowsOfYear().then(data => setShows(data));\n  }, []);\n\n  return (\n    <ul className={styles.list}>\n      {shows &&\n        shows.slice(0, 7).map(show => (\n          <li key={show.id} className={styles.item}>\n            <div className={styles.imageWrapper}>\n              <LazyLoadImage\n                alt={show.name}\n                effect=\"blur\"\n                src={`https://image.tmdb.org/t/p/original/${show.poster_path}`}\n                onError={imageOnErrorHandler}\n                className={styles.img}\n              />\n            </div>\n            <div className={styles.info}>\n              <Link\n                to={`/subscription/213/${show.id}`}\n                className={styles.title}\n              >\n                {show.name}\n              </Link>\n              <p>Rate: {show.vote_average}</p>\n            </div>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default TopRatedList;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SubscriptionPage_wrapper__MiAd-\"};","import ComedyTop from 'components/ComedyTop/ComedyTop';\nimport Navigation from 'components/Navigation/Navigation';\nimport PopularList from 'components/PopularList/PopularList';\nimport SubscribList from 'components/SubscribList/SubscribList';\nimport TopRatedList from 'components/TopRatedList/TopRatedList';\nimport { NetworkContext } from 'Context/NetworkContext';\nimport { useContext } from 'react';\nimport styles from './SubscriptionPage.module.scss';\n\nconst SubscriptionPage = () => {\n  const { networks } = useContext(NetworkContext);\n  const subscribList = networks.filter(network => network.sub === true);\n\n  return (\n    <>\n      <Navigation />\n      <div className={styles.wrapper}>\n        <h2>Popular striming servises</h2>\n        <SubscribList subscribList={subscribList} />\n        <h2>Top rated on Netflix</h2>\n        <TopRatedList />\n        <h2>Popular today</h2>\n        <PopularList />\n        <h2>Recomend in Comedy</h2>\n        <ComedyTop />\n      </div>\n    </>\n  );\n};\n\nexport default SubscriptionPage;\n"],"names":["getServiceInfo","id","axios","then","res","data","catch","error","response","getSeriesList","page","results","getSerial","getSeasonInfo","serialId","seasonNumber","getMostViewedShowsOfYear","getPopularToday","getMostViewedShowsOfGenre","api_key","language","className","styles","exact","to","src","Logo","alt","width","height","activeClassName","imageOnErrorHandler","event","currentTarget","noImageLoad","useState","shows","setShows","useEffect","slice","map","show","LazyLoadImage","name","effect","poster_path","onError","title","vote_average","subscribList","network","pathname","logo_path","useContext","NetworkContext","networks","filter","sub","Navigation"],"sourceRoot":""}